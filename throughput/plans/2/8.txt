BEGIN;
BEGIN
EXPLAIN
select
	o_year,
	sum(case
		when nation = 'GERMANY' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'LARGE BURNISHED STEEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=20195300.94..20195302.77 rows=732 width=38)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  HashAggregate  (cost=20195253.30..20195266.11 rows=732 width=38)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Hash Join  (cost=5356668.36..20190411.18 rows=242106 width=38)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               ->  Hash Join  (cost=5356666.79..20185870.13 rows=242106 width=16)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     ->  Hash Join  (cost=5312370.79..20138245.17 rows=242106 width=16)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Nested Loop  (cost=4084.63..14772790.73 rows=3981616 width=16)
                                 ->  Bitmap Heap Scan on part  (cost=4084.06..280247.19 rows=132580 width=4)
                                       Recheck Cond: ((p_type)::text = 'LARGE BURNISHED STEEL'::text)
                                       ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..4050.91 rows=132580 width=0)
                                             Index Cond: ((p_type)::text = 'LARGE BURNISHED STEEL'::text)
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.57..109.00 rows=31 width=20)
                                       Index Cond: (l_partkey = part.p_partkey)
                           ->  Hash  (cost=5194160.95..5194160.95 rows=9130017 width=8)
                                 ->  Hash Join  (cost=1597394.47..5194160.95 rows=9130017 width=8)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=970877.94..4191031.22 rows=45650085 width=12)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..959465.42 rows=45650085 width=0)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=589016.53..589016.53 rows=3000000 width=4)
                                             ->  Hash Join  (cost=2.53..589016.53 rows=3000000 width=4)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..502764.00 rows=15000000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'EUROPE'::bpchar)
                     ->  Hash  (cost=31796.00..31796.00 rows=1000000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..31796.00 rows=1000000 width=8)
               ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(39 rows)

COMMIT;
COMMIT
